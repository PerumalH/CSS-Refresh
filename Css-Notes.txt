What is CSS?
make a web page look good - style the page.

History:
1996 Version 1 - css 1
1998 version 2 - css 2
In Development - css 3 - split up into independent Modules


Basics Of CSS :-

1. How to Add CSS to Html
2. Setting up CSS Rules
3. Selectors, Properties, Values 
4. Conflicting Styles
 h

Three Different Way:

inline Style - inside the tag
internal style - inside the html page Inbetween head section - using Selector
External Style - use the css file to style the web, for connect the page. we use link element in html page.

Selector:-

1. Element Tag Selector
2. Class Selector -we can reuse the class selector to another tag, also add multiple classes by space between -.
3. Universal Selector - * - rarely use this one.
4. IDs - one id to one specific element, we don't use same Id for other Element - #
5. Attributes - set equal style to all elements with attribues - [Attribute Name]

cascading style sheet - multiple rules can apply to the same Element.
Specificity - resolve conflict arising from multiple Rules
*** low to high priority.

1. tag and ::pseudo-element selector
2. class :pseudo-class and [attribute] selector
3. #id selector
4. Inline Styles

inheritance - element inherit some style from parent element(Low Specificity)
Combinator :- Combine multiple Selector.

1. Adjacent Sibling - h2 + p {}
  direct sibling -> second comes after h2 tag

2. general sibling - h2 ~ p {}
  after h2 element if p tag comes, it's apply.

3. child - div > p{}
  direct child of first element.

4. descendant - div p{}
  all p tags would apply, after the div.


selector, properties, value: predefine,color,size,function

Complete MDN CSS Reference (don't learn this by heart!): https://developer.mozilla.org/en-US/docs/Web/CSS/Reference

Do you prefer reading? Find written CSS docs on MDN: https://developer.mozilla.org/en-US/docs/Web/CSS

Common CSS Properties Reference: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Properties_Reference

CSS Combinators: https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Combinators_and_multiple_selectors

More details on CSS Specifity: https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity

CSS Box Model- every element work as a box.

Margin Collapsing - bigger element margin wins - use either margin-top and margin-botton. to rid of that.

When working with margins, you can get unexpected results. 

Why are two adjacent elements sharing one margin even though each element has its own one?
Why does a parent element (e.g. <section>  as in the videos) suddenly take on the margin of the child element (e.g. <h1> )?
It's always related to margin collapsing. You can dive deeply into it with the help of the following awesome article: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Box_Model/Mastering_margin_collapsing

There, three base cases are described:

Adjacent siblings which both have margins
A parent which holds one or more child elements where the first and/ or last (or the only) child has margins
An element without content, padding, border and height
Let's explore these cases:

1. Adjacent Siblings

In this case, the first element might have a margin of 10px  (on all sides let's say) and the second one has 5px  (or 20px  - the values don't matter).
CSS will collapse the margins and only add the bigger one between the elements. 
So if we got margins of 10px  and 5px , a 10px  margin would be added between the elements?

2. A parent with children that have a margin
To be precise, the first and/ or last or the only child has to have margins (top and/ or bottom). 
In that case, the parent elements margin will collapse with the child element(s)' margins. 
Again, the bigger margin wins and will be applied to the parent element.
If the parent element has padding, inline content (other than the child elements) or a border, 
this behavior should not occur, the child margin will instead be added to the content of the wrapping parent element.

3. An empty element with margins
This case probably doesn't occur that often but if you got an element with no content, 
no padding, no border and no height, then the top and bottom margin will be merged into one single margin. Again, the bigger one wins.

Shorthand Properties:- combined value of multiple properties in a single property

Height & width - it's include only the size of the content ,
 not border,margin,padding
if we add the b,m,p. it'will override the page.
to rid of that, we have to use box-sizing


pseudo classes and pseudo Element

grouping rule - using the comma(,)

Useful Resources & Links
CSS Box Model: https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Box_model

box-sizing : https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing

More on height & width: https://www.w3schools.com/css/css_dimension.asp

The display  Property: https://developer.mozilla.org/en-US/docs/Web/CSS/display

Pseudo Classes on the MDN: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes

Dive deeper into Pseudo Elements: https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-elements